/*
Constants
*/
/*
Hides text in the margin
*/
/*
Turns a button into an icon
*/
/*
Centres a graphic or glyph inside an icon
*/
/*
Offers both the pixel and rem value of a single property
*/
/*
Offers both the pixel and rem values of a shorthand property
*/
/*
Offers the text size as both the pixel and rem value
*/
/*
Adds vendor prefixed to a property
*/
/*
Applies the "clearfix" hack to a container with floating content
*/
section.aspect {
  background: linear-gradient(center top, #FFFFFF 0%, #FFFFFF 1px, #CCCCCC 1px, #FFFFFF 30px, #FFFFFF 100%) repeat scroll 0 0 #FFFFFF;
  -webkit-box-shadow: 0 1px 3px #999;
  box-shadow: 0 1px 3px #999;
  border: solid 1px #333;
  border-radius: 5px;
  overflow: hidden;
  display: block;
  margin-bottom: 2em; }
  section.aspect article {
    padding: 15px; }

section.aspect {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }
  section.aspect.aspect-16x9, section.aspect.aspect-4x3 {
    position: relative; }
    section.aspect.aspect-16x9 > *, section.aspect.aspect-4x3 > * {
      position: absolute;
      width: 100%;
      height: 100%; }
  section.aspect.aspect-16x9 {
    padding-bottom: 56.25%; }
  section.aspect.aspect-4x3 {
    padding-bottom: 75%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9taXhpbnMuc2NzcyIsImFzcGVjdHJhdGlvLmNzcyIsIl9leGFtcGxlLnNjc3MiLCJfYXNwZWN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0NDRUM7QURVRDs7Q0NQQztBRGdCRDs7Q0NiQztBRDBCRDs7Q0N2QkM7QURvREQ7O0NDakRDO0FEd0REOztDQ3JEQztBRDBFRDs7Q0N2RUM7QUQrRkQ7O0NDNUZDO0FEc0dEOztDQ25HQztBQzFCRDtFQUNDLG1JQUFvSTtFQUNwSSxrQ0FBMEI7RUFBMUIsMEJBQTBCO0VBQzFCLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxrQkFBa0IsRUFBQTtFQVBuQjtJQVVFLGFBQWEsRUFBQTs7QUNWZjtFQUNDLDhCQUFzQjtFQUF0QixzQkFBc0IsRUFBQTtFQUR2QjtJQUtFLGtCQUFrQixFQUFBO0lBTHBCO01BUUcsa0JBQWtCO01BQ2xCLFdBQVc7TUFDWCxZQUFZLEVBQUE7RUFWZjtJQWVFLHNCQUFzQixFQUFBO0VBZnhCO0lBbUJFLG1CQUFtQixFQUFBIiwiZmlsZSI6ImFzcGVjdHJhdGlvLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db25zdGFudHNcbiovXG4kY29sb3ItYmFja2dyb3VuZCA6ICNmZmZmZmY7XG4kY29sb3ItdGV4dCA6ICMxZTFlMWU7XG4kY29sb3ItcGFzc2l2ZSA6ICNmZjZhMDA7XG4kY29sb3ItYWN0aXZlIDogI2Q0NTgwMDtcbiRjb2xvci1ob3ZlciA6ICNmZjk4MDA7XG4kY29sb3ItZGlzYWJsZWQgOiAjN2Y3ZjdmO1xuJGNvbG9yLWhpZ2hsaWdodCA6ICNlZWVlZWU7XG4kaWNvblNpemUgOiA2NHB4O1xuJHJlbVNpemUgOiAxMjtcbi8qXG5IaWRlcyB0ZXh0IGluIHRoZSBtYXJnaW5cbiovXG5AbWl4aW4gb2JmdXNjYXRlICgkZGlzdGFuY2U6MTAwKSB7XG5cdG92ZXJmbG93IDogaGlkZGVuO1xuXHR0ZXh0LWFsaWduIDogbGVmdDtcblx0dGV4dC1pbmRlbnQgOiAoJGRpc3RhbmNlICsgMTApICsgcHg7XG5cdHdoaXRlLXNwYWNlIDogbm93cmFwO1xufVxuLypcblR1cm5zIGEgYnV0dG9uIGludG8gYW4gaWNvblxuKi9cbkBtaXhpbiBpY29uUGFyZW50ICgkc2l6ZTozMiwgJHVuaXQ6cHgpIHtcblx0b3ZlcmZsb3cgOiBoaWRkZW47XG5cdHBvc2l0aW9uIDogcmVsYXRpdmU7XG5cdHRleHQtYWxpZ24gOiBsZWZ0O1xuXHR0ZXh0LWluZGVudCA6ICgkc2l6ZSArIDEwKSArICR1bml0O1xuXHR3aGl0ZS1zcGFjZSA6IG5vd3JhcDtcblx0LyogQmVjYXVzZSBvZiBJbnRlcm5ldCBFeHBsb3JlciA4IHdlIGNhbid0IGhhdmUgbmljZSB0aGluZy4gKi9cblx0b3ZlcmZsb3cgOiB2aXNpYmxlO1xuXHR0ZXh0LWluZGVudCA6IC05OTllbTtcbn1cbi8qXG5DZW50cmVzIGEgZ3JhcGhpYyBvciBnbHlwaCBpbnNpZGUgYW4gaWNvblxuKi9cbkBtaXhpbiBpY29uQ2VudGVyICgkc2l6ZTozMiwgJHVuaXQ6cHgsICRjaGFyOicnLCAkbWFyZ2luOjAuNSkge1xuXHRjb250ZW50IDogJGNoYXI7XG5cdGRpc3BsYXkgOiBibG9jaztcblx0Zm9udC1mYW1pbHkgOiBGb250QXdlc29tZTtcblx0QGlmICR1bml0ID09ICdyZW0nIHtcblx0XHRmb250LXNpemUgOiAoJHNpemUgKiAkcmVtU2l6ZSAqICRtYXJnaW4pICsgcHg7XG5cdFx0aGVpZ2h0IDogKCRzaXplICogJHJlbVNpemUpICsgcHg7XG5cdFx0bGluZS1oZWlnaHQgOiAoJHNpemUgKiAkcmVtU2l6ZSkgKyBweDtcblx0XHRtYXJnaW4tbGVmdCA6ICgkc2l6ZSAqICRyZW1TaXplIC8gLTIpICsgcHg7XG5cdFx0bWFyZ2luLXRvcCA6ICgkc2l6ZSAqICRyZW1TaXplIC8gLTIpICsgcHg7XG5cdFx0d2lkdGggOiAoJHNpemUgKiAkcmVtU2l6ZSkgKyBweDtcblx0fVxuXHRAaWYgJGNoYXIgIT0gJycge1xuXHRcdHRleHQtaW5kZW50IDogMDtcblx0fVxuXHRmb250LXNpemUgOiAoJHNpemUgKiAkbWFyZ2luKSArICR1bml0O1xuXHRoZWlnaHQgOiAkc2l6ZSArICR1bml0O1xuXHRsaW5lLWhlaWdodCA6ICRzaXplICsgJHVuaXQ7XG5cdG1hcmdpbi1sZWZ0IDogKCRzaXplIC8gLTIpICsgJHVuaXQ7XG5cdG1hcmdpbi10b3AgOiAoJHNpemUgLyAtMikgKyAkdW5pdDtcblx0d2lkdGggOiAkc2l6ZSArICR1bml0O1xuXHRwb3NpdGlvbiA6IGFic29sdXRlO1xuXHRsZWZ0IDogNTAlO1xuXHR0ZXh0LWFsaWduIDogY2VudGVyO1xuXHR0b3AgOiA1MCU7XG59XG4vKlxuT2ZmZXJzIGJvdGggdGhlIHBpeGVsIGFuZCByZW0gdmFsdWUgb2YgYSBzaW5nbGUgcHJvcGVydHlcbiovXG5AbWl4aW4gcmVtICgkbmFtZTonJywgJHZhbHVlOicnKSB7XG5cdCN7JG5hbWV9IDogKCRyZW1TaXplICogJHZhbHVlKSArIHB4O1xuXHQjeyRuYW1lfSA6ICR2YWx1ZSArIHJlbTtcbn1cbi8qXG5PZmZlcnMgYm90aCB0aGUgcGl4ZWwgYW5kIHJlbSB2YWx1ZXMgb2YgYSBzaG9ydGhhbmQgcHJvcGVydHlcbiovXG5AbWl4aW4gcmVtcyAoJG5hbWU6JycsICR0b3A6JycsICRyaWdodDonJywgJGJvdHRvbTonJywgJGxlZnQ6JycpIHtcblx0QGlmICR0b3AgIT0gJycge1xuXHRcdCN7JG5hbWV9LXRvcCA6ICgkcmVtU2l6ZSAqICR0b3ApICsgcHg7XG5cdFx0I3skbmFtZX0tdG9wIDogJHRvcCArIHJlbTtcblx0fVxuXHRAaWYgJHJpZ2h0ICE9ICcnIHtcblx0XHQjeyRuYW1lfS1yaWdodCA6ICgkcmVtU2l6ZSAqICRyaWdodCkgKyBweDtcblx0XHQjeyRuYW1lfS1yaWdodCA6ICRyaWdodCArIHJlbTtcblx0fVxuXHRAaWYgJGJvdHRvbSAhPSAnJyB7XG5cdFx0I3skbmFtZX0tYm90dG9tIDogKCRyZW1TaXplICogJGJvdHRvbSkgKyBweDtcblx0XHQjeyRuYW1lfS1ib3R0b20gOiAkYm90dG9tICsgcmVtO1xuXHR9XG5cdEBpZiAkbGVmdCAhPSAnJyB7XG5cdFx0I3skbmFtZX0tbGVmdCA6ICgkcmVtU2l6ZSAqICRsZWZ0KSArIHB4O1xuXHRcdCN7JG5hbWV9LWxlZnQgOiAkbGVmdCArIHJlbTtcblx0fVxufVxuLypcbk9mZmVycyB0aGUgdGV4dCBzaXplIGFzIGJvdGggdGhlIHBpeGVsIGFuZCByZW0gdmFsdWVcbiovXG5AbWl4aW4gdGV4dCAoJHNpemUpIHtcblx0QGlmICRzaXplID09IHMge1xuXHRcdGZvbnQtc2l6ZSA6ICgkcmVtU2l6ZSAqIDAuODc1KSArIHB4O1xuXHRcdGZvbnQtc2l6ZSA6IDAuODc1cmVtO1xuXHR9IEBlbHNlIGlmICRzaXplID09IG0ge1xuXHRcdGZvbnQtc2l6ZSA6ICgkcmVtU2l6ZSAqIDEpICsgcHg7XG5cdFx0Zm9udC1zaXplIDogMXJlbTtcblx0fSBAZWxzZSBpZiAkc2l6ZSA9PSBsIHtcblx0XHRmb250LXNpemUgOiAoJHJlbVNpemUgKiAxLjI1KSArIHB4O1xuXHRcdGZvbnQtc2l6ZSA6IDEuMjVyZW07XG5cdH0gQGVsc2UgaWYgJHNpemUgPT0geGwge1xuXHRcdGZvbnQtc2l6ZSA6ICgkcmVtU2l6ZSAqIDEuNjI1KSArIHB4O1xuXHRcdGZvbnQtc2l6ZSA6IDEuNjI1cmVtO1xuXHR9IEBlbHNlIGlmICRzaXplID09IHh4bCB7XG5cdFx0Zm9udC1zaXplIDogKCRyZW1TaXplICogMS44NzUpICsgcHg7XG5cdFx0Zm9udC1zaXplIDogMS44NzVyZW07XG5cdH0gQGVsc2Uge1xuXHRcdGZvbnQtc2l6ZSA6ICgkcmVtU2l6ZSAqICRzaXplKSArIHB4O1xuXHRcdGZvbnQtc2l6ZSA6ICRzaXplICsgcmVtO1xuXHR9XG59XG4vKlxuQWRkcyB2ZW5kb3IgcHJlZml4ZWQgdG8gYSBwcm9wZXJ0eVxuKi9cbkBtaXhpbiB2ZW5kb3JzICgkbmFtZTonJywgJHZhbHVlOicnKSB7XG5cdC1vLSN7JG5hbWV9IDogdW5xdW90ZSgkdmFsdWUpO1xuXHQtbXMtI3skbmFtZX0gOiB1bnF1b3RlKCR2YWx1ZSk7XG5cdC1tb3otI3skbmFtZX0gOiB1bnF1b3RlKCR2YWx1ZSk7XG5cdC13ZWJraXQtI3skbmFtZX0gOiB1bnF1b3RlKCR2YWx1ZSk7XG5cdCN7JG5hbWV9IDogdW5xdW90ZSgkdmFsdWUpO1xufVxuLypcbkFwcGxpZXMgdGhlIFwiY2xlYXJmaXhcIiBoYWNrIHRvIGEgY29udGFpbmVyIHdpdGggZmxvYXRpbmcgY29udGVudFxuKi9cbkBtaXhpbiBjbGVhcmZpeCAoKSB7XG5cdCp6b29tOiAxO1xuXHQmOmFmdGVyIHtcblx0XHRjbGVhcjogYm90aDtcblx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LXNpemU6IDA7XG5cdFx0aGVpZ2h0OiAwO1xuXHRcdHZpc2liaWxpdHk6IGhpZGRlbjtcblx0fVxufVxuIiwiLypcbkNvbnN0YW50c1xuKi9cbi8qXG5IaWRlcyB0ZXh0IGluIHRoZSBtYXJnaW5cbiovXG4vKlxuVHVybnMgYSBidXR0b24gaW50byBhbiBpY29uXG4qL1xuLypcbkNlbnRyZXMgYSBncmFwaGljIG9yIGdseXBoIGluc2lkZSBhbiBpY29uXG4qL1xuLypcbk9mZmVycyBib3RoIHRoZSBwaXhlbCBhbmQgcmVtIHZhbHVlIG9mIGEgc2luZ2xlIHByb3BlcnR5XG4qL1xuLypcbk9mZmVycyBib3RoIHRoZSBwaXhlbCBhbmQgcmVtIHZhbHVlcyBvZiBhIHNob3J0aGFuZCBwcm9wZXJ0eVxuKi9cbi8qXG5PZmZlcnMgdGhlIHRleHQgc2l6ZSBhcyBib3RoIHRoZSBwaXhlbCBhbmQgcmVtIHZhbHVlXG4qL1xuLypcbkFkZHMgdmVuZG9yIHByZWZpeGVkIHRvIGEgcHJvcGVydHlcbiovXG4vKlxuQXBwbGllcyB0aGUgXCJjbGVhcmZpeFwiIGhhY2sgdG8gYSBjb250YWluZXIgd2l0aCBmbG9hdGluZyBjb250ZW50XG4qL1xuc2VjdGlvbi5hc3BlY3Qge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoY2VudGVyIHRvcCwgI0ZGRkZGRiAwJSwgI0ZGRkZGRiAxcHgsICNDQ0NDQ0MgMXB4LCAjRkZGRkZGIDMwcHgsICNGRkZGRkYgMTAwJSkgcmVwZWF0IHNjcm9sbCAwIDAgI0ZGRkZGRjtcbiAgYm94LXNoYWRvdzogMCAxcHggM3B4ICM5OTk7XG4gIGJvcmRlcjogc29saWQgMXB4ICMzMzM7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDJlbTsgfVxuICBzZWN0aW9uLmFzcGVjdCBhcnRpY2xlIHtcbiAgICBwYWRkaW5nOiAxNXB4OyB9XG5cbnNlY3Rpb24uYXNwZWN0IHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICBzZWN0aW9uLmFzcGVjdC5hc3BlY3QtMTZ4OSwgc2VjdGlvbi5hc3BlY3QuYXNwZWN0LTR4MyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgc2VjdGlvbi5hc3BlY3QuYXNwZWN0LTE2eDkgPiAqLCBzZWN0aW9uLmFzcGVjdC5hc3BlY3QtNHgzID4gKiB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTsgfVxuICBzZWN0aW9uLmFzcGVjdC5hc3BlY3QtMTZ4OSB7XG4gICAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxuICBzZWN0aW9uLmFzcGVjdC5hc3BlY3QtNHgzIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNzUlOyB9XG4iLCJzZWN0aW9uLmFzcGVjdCB7XG5cdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChjZW50ZXIgdG9wICwgI0ZGRkZGRiAwJSwgI0ZGRkZGRiAxcHgsICNDQ0NDQ0MgMXB4LCAjRkZGRkZGIDMwcHgsICNGRkZGRkYgMTAwJSkgcmVwZWF0IHNjcm9sbCAwIDAgI0ZGRkZGRjtcblx0Ym94LXNoYWRvdzogMCAxcHggM3B4ICM5OTk7XG5cdGJvcmRlcjogc29saWQgMXB4ICMzMzM7XG5cdGJvcmRlci1yYWRpdXM6IDVweDtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbi1ib3R0b206IDJlbTtcblxuXHRhcnRpY2xlIHtcblx0XHRwYWRkaW5nOiAxNXB4O1xuXHR9XG59XG4iLCJzZWN0aW9uLmFzcGVjdCB7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cblx0Ji5hc3BlY3QtMTZ4OSxcblx0Ji5hc3BlY3QtNHgzIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cblx0XHQ+ICoge1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0fVxuXHR9XG5cblx0Ji5hc3BlY3QtMTZ4OSB7XG5cdFx0cGFkZGluZy1ib3R0b206IDU2LjI1JTtcblx0fVxuXG5cdCYuYXNwZWN0LTR4MyB7XG5cdFx0cGFkZGluZy1ib3R0b206IDc1JTtcblx0fVxufVxuIl19 */
